
<div id="carousel-example-generic" class="carousel slide" data-ride="carousel">
  <!-- Indicators -->
  <ol class="carousel-indicators">
    <li data-target="#carousel-example-generic" data-slide-to="0" class="active"></li>
    <li data-target="#carousel-example-generic" data-slide-to="1"></li>
  </ol>

  <!-- Wrapper for slides -->
  <div class="carousel-inner">
     <div class="item active">
      <%= image_tag("ball.jpg", class: 'layer') %>
       <div class="carousel-caption">
           <h2>Let us find you tennis partners in your area.</h2>
       </div>
     </div>
     <div class="item">
       <%= image_tag("rackets.jpg", class: 'layer') %>
       <div class="carousel-caption">
           <h2>Get outside, play tennis, and have fun!</h2>
       </div>
     </div>
   </div>
  <!-- Controls -->
  <a class="left carousel-control" href="#carousel-example-generic" role="button" data-slide="prev">
    <i class="fa fa-angle-left"></i>
  </a>
  <a class="right carousel-control" href="#carousel-example-generic" role="button" data-slide="next">
    <i class="fa fa-angle-right"></i>
  </a>
</div> <!-- Carousel -->
  <div class="row">
    <div class="col-md-4">
      <hr class="section-heading-spacer">
      <h2 class="section-title">Find players close to you.</h2>
      <p class="lead">Let's Play Tennis is a community of tennis players. Meet other players at your level and in your area and schedule time to play at your convenience.</p>
    </div>
    <div class="col-md-8">
    <head>
      <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
      <meta charset="utf-8">

      <title>Places search box</title>
      <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true&libraries=places"></script>
      <script>
  // This example adds a search box to a map, using the Google Place Autocomplete
  // feature. People can enter geographical searches. The search box will return a
  // pick list containing a mix of places and predicted search terms.

  function initialize() {


    var markers = [];
    var map = new google.maps.Map(document.getElementById('map-canvas'), {
      mapTypeId: google.maps.MapTypeId.ROADMAP
    });

    var defaultBounds = new google.maps.LatLngBounds(
        new google.maps.LatLng(39.739314, -104.988639),
        new google.maps.LatLng(39.739314, -104.988639));
    map.fitBounds(defaultBounds);

    // Create the search box and link it to the UI element.
    var input = /** @type {HTMLInputElement} */(
        document.getElementById('pac-input'));
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

    var searchBox = new google.maps.places.SearchBox(
      /** @type {HTMLInputElement} */(input));

    // [START region_getplaces]
    // Listen for the event fired when the user selects an item from the
    // pick list. Retrieve the matching places for that item.
    google.maps.event.addListener(searchBox, 'places_changed', function() {
      var places = searchBox.getPlaces();

      if (places.length == 0) {
        return;
      }
      for (var i = 0, marker; marker = markers[i]; i++) {
        marker.setMap(null);
      }

      // For each place, get the icon, place name, and location.
      markers = [];
      var bounds = new google.maps.LatLngBounds();
      for (var i = 0, place; place = places[i]; i++) {
        var image = {
          url: place.icon,
          size: new google.maps.Size(71, 71),
          origin: new google.maps.Point(0, 0),
          anchor: new google.maps.Point(17, 34),
          scaledSize: new google.maps.Size(25, 25)
        };

        // Create a marker for each place.
        var marker = new google.maps.Marker({
          map: map,
          icon: image,
          title: place.name,
          position: place.geometry.location
        });

        markers.push(marker);

        bounds.extend(place.geometry.location);
      }

      map.fitBounds(bounds);
    });
    // [END region_getplaces]

    // Bias the SearchBox results towards places that are within the bounds of the
    // current map's viewport.

    google.maps.Marker.addListener(map, 'dblclick', function() {
      map.setZoom(25);
    });

    google.maps.event.addListener(map, 'bounds_changed', function() {
      var bounds = map.getBounds();
      searchBox.setBounds(bounds);
      map.setZoom(20);
    });


  }

  google.maps.event.addDomListener(window, 'load', initialize);

      </script>
      <style>
        #target {
          width: 345px;
        }
      </style>
    </head>

      <input id="pac-input" class="controls" type="text" placeholder="Search Box">
      <div id="map-canvas"></div>

    </div>
  </div>
